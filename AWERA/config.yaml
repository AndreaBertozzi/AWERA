---
# Configuration file for AWE wind resource analysis.
General:
    ref_height: 100 # in m
    # Write output of evaluation steps to files
    # Set this to False when using custom input to functions
    # to avoid overwriting of previous output obtained using config
    write_output: True
    # Use numpy memory mapping to disk files - useful for clustering
    # large numbers of locations and samples
    use_memmap: False


Processing:
    parallel: True
    n_cores: 5
    progress_out: 'stdout'  # default:'stderr' or 'stdout' printing pregress bar

Plotting:
    plots_interactive: False  # Don't save plots directly as pdf to result_dir
    # TODO check if all plots are saved to file otherwise: plot_output

Clustering:
    n_clusters: 8
    n_pcs: 5
    training:
        # if is Null -> same as Data | training and prediction on same data
        start_year: null
        final_year: null
        n_locs: null # -1
        # TODO improve init_locs setting
        init_locs: null
        location_type: null #'ireland'
        sample_ids: null
        sample_type: null
    # Clustering evaluation
    # Run clustering on training data and export cluster labels and
    # cluster vertical wind profiles
    make_profiles: True
    # For finished clustering export the frequency distribution matching the
    # velocity binning of the cut-in/out wind speed ranges from
    # power production simulation
    make_freq_distr: False # True
    n_wind_speed_bins: 100
    # Predict cluster labels for new data given in Data from already trained
    # clustering on the data given in Clustering-training
    predict_labels: False # True

    save_pca_pipeline: True

Power:
    kite_and_QSM_settings_file: 'kitepower_100kW'  # '_78'  # '/home/s6lathim/physik/AWE/AWERA/kitepower_100kW.py'
    # Estimate cut-in/out wind speeds for the model
    estimate_cut_in_out: True
    # Run power production simulation for the velocity ranges defined
    # by the cut-in/out estimation
    make_power_curves: True

    OPT_VARIABLES: [
        "Reel-out\nforce [N]", "Reel-in\nforce [N]",
        "Elevation\nangle [rad]", "Reel-in tether\nlength [m]",
        "Minimum tether\nlength [m]", "Reel-out powering [-]"
        ]
    BOUNDS_DEFAULT: [
        'system', 'system',
        '25 to 60 deg', '150 to 250m',
        '200 to 250', '1 to 0',
    ]
    # Bounds to be updated, None/null is keep default
    bounds: [null, null, null, null, null, [0.5, 1]]

Data:
    start_year: 2011  # 2010  # (4-digit int): Process the wind data starting from this year
    final_year: 2017  # 2020  # (4-digit int): Process the wind data up to this year
    year_final_month: 12  # (int 1-12): Only read data from January to year_final_month | useful for testing on small amounts of data

    # Select single sample ids:
    # TODO optional selection like location selection
    sample_ids: null
    #[22217,   295,   492,   895,   965,  1087,  1596,  1840,  2166, 2697,  2705,  3671,  4163,  4289,  4315,  4877,  5097,  5132, 5213,  5321,  5358,  5543,  6139,  6179,  6978,  7251,  7380, 7444,  7468,  7795,  7806,  8006,  8124,  8176,  8294,  8346, 8427,
    #             9015,  9501,  9645,  9924,  9993, 10334, 10354, 10572,       10614, 10725, 11394, 13052, 13108, 13324, 13351, 13728, 13729,      13791, 13900, 13904, 14392, 14393, 14816, 14833, 15302, 15531,       16121, 16232, 16461, 16562, 16970, 16974, 16987, 17098, 17519,       17982, 18100, 18339, 18479, 18771, 18891, 18948, 19068, 19089,       19202, 19260, 19517, 19986, 20119, 20656, 20942, 20957, 21023,       21457, 22093, 22762, 22806, 22899, 23771, 24055, 24081, 24316,       25023, 25205, 25240, 25352, 25562, 25779, 26403, 26421, 26484,       26582, 26633, 26707, 26741, 26798, 26856, 26906, 27443, 27484,       27840, 27923, 28143, 28603, 28871, 29078, 29245, 29322, 29435,       29528, 29550, 29563, 29679, 29814, 29864, 30653, 30744, 31220,       31697, 31811, 31853, 32060, 32782, 32889, 32960, 33039, 33244,       34398, 34518, 34574, 34796, 35023, 36217, 36347, 36533, 36571,       36662, 36887, 36942, 37570, 37872, 38111, 38848, 39242, 39336,       39468, 39862, 39939, 39950, 40227, 41335, 41454, 41950, 42295,       42389, 42505, 42586, 42907, 42984, 43126, 43786, 43859, 44486,       44611, 44659, 44807, 45092, 45707, 46059, 46291, 46421, 46535,       47245, 47825, 47961, 47963, 48185, 48273, 48403, 48939, 48957,       49010, 49226, 49362, 49604, 49739, 49825, 49968, 50343, 50361,       50557, 51688, 51870, 51939, 51997, 52030, 52169, 52465, 52531,       53052, 53905, 54420, 54479, 54531, 54996, 55505, 55777, 56119,       56177, 56255, 56287, 56311, 56406, 56820, 56936, 57401, 57508,       57576, 58097, 58150, 58558, 59218, 59362, 59599, 59904, 59977,       60447, 60562, 60637, 60715, 61509, 61634, 61693, 61934, 62255,       62454, 62578, 62843, 62899, 63824, 63857, 63885, 64806, 64883,       65731, 65850, 66005, 66113, 66173, 66351, 66827, 67373, 68531,       68533, 68563, 68681, 68812, 69111, 69474, 69683, 69949, 69959,       70383, 70445, 70711, 70945, 71226, 71441, 71629, 73189, 73202,       73554, 74097, 74154, 74822, 74933, 74964, 75015, 75758, 75839,       76070, 76254, 76715, 77266, 78934, 79191, 79512, 79576, 79910,       80093, 80334, 80347, 80448, 80737, 80844, 80855, 81429, 82086,       82335, 82349, 82521, 82651, 82968, 83077, 83110, 83162, 83213,       83455, 83553, 84294, 84367, 84716, 84756, 84762, 84781, 84806,       85331, 86034, 86294, 86967, 87033, 87304, 87581, 87614, 87628,       87835, 87911, 88005, 88811, 89231, 89376, 89643, 89890]
    sample_type: null
    #'bi-weekly'

    # L137 model level definitions:
    #    https://www.ecmwf.int/en/forecasts/documentation-and-support/137-model-levels
    read_model_level_up_to: 112
    n_locs: 1 # -1  # Randomly select this many locations | -1 for all locations
    # TODO if no n_locs given: set to len(locations) ?
    location_type: 'Maasvlakte_2' # 'europe_ref'  # 'ireland_full' #  # choose locations via location_selection
    init_locs: [[51.982782, 4.010359]]
    lat_range: [65, 30]  #[51, 56]  #
    lon_range: [-20, 20]  # [-12, -5.25]  # [-12, -6]  #
    grid_size: 0.25
    # TODO location type : int number: select random
    # if number set -> new location type

    # Choose dataset source
    # use_data_opts: ['ERA5', 'ERA5_1x1', 'DOWA', 'LIDAR']
    use_data: 'DOWA'  # 'ERA5'
    # DOWA data contains years 2008 to 2017
    DOWA_data_dir: "/cephfs/user/s6lathim/DOWA/" #TODO test for DOWA data again
    # TODO test multiple locations input DOWA
    era5_data_dir: '/cephfs/user/s6lathim/ERA5Data/'  # era5_data_dir (str): Directory path for reading era5 data files.


    # ----------- ERA5 input format --------------------------

    #TODO this is outdated - slim down to necessary monthly and single loc
    #era5_data_input_formats: ['monthly', 'loc_box', 'single_loc']
    era5_data_input_format: 'single_loc'
    # TODO remove loc box  options? -> read data
    format:
        surface_file_name_format: "{:d}_europe_{:d}_152.nc"  # (str): Target name of geopotential and surface pressure data files.
        # TODO include format name year month
        model_level_file_name_format: "{:d}_europe_{:d}_130_131_132_133_135.nc"  # (str): Target name of the wind data files.

        # ----------------- single location files
        latitude_ds_file_name: "cdo_single_loc/time_combined/loc-wise/europe_2010_2020_130_131_132_133_135_lat_{lat:.2f}_lon_{lon:.2f}.nc"

    # Requested height range:
    # DOWA height range
    # height_range_DOWA:
    height_range: [10.,  20.,  40.,  60.,  80., 100., 120., 140., 150., 160.,
                        180., 200., 220., 250., 300., 500., 600.]
    # Equidistant height range ~40m
    # height_range: [10.,  50.,  100.,  140.,  180., 220., 260., 300., 340., 380.,
    #                 420., 500., 600.]

IO:
    result_dir: "/cephfs/user/s6lathim/AWERA_results_Rotterdam/"
    format:
        # Data
        locations: 'locations_{location_type}_n_{n_locs}.pickle'
        # Clustering
        profiles: 'cluster_wind_profile_shapes_{data_info_training}_{settings_info}.csv'
        freq_distr: 'cluster_freq_distribution_{data_info}__{data_info_training}_{settings_info}.pickle'
        labels: 'cluster_labels_{data_info}__{data_info_training}_{settings_info}.pickle'
        # TODO improve data/training handling, not all just data and traiing in config.py
        cluster_pipeline: 'cluster_pipeline_{data_info_training}_{settings_info}.pickle'
        pca_pipeline: 'pca_pipeline_{data_info_training}_{settings_info}.pickle'
        # Power Production
        power_curve: 'power_curve_{{i_profile:.0f}}_{data_info_training}_{settings_info}.{{suffix}}'
        # power_curve: 'power_curve_max_27_{{i_profile:.0f}}_{data_info_training}_{settings_info}.{{suffix}}'
        cut_wind_speeds: 'cluster_profiles_cut_in_out_{data_info_training}_{settings_info}_estimate.csv'
        # cut_wind_speeds: 'cluster_profiles_cut_in_out_max_27_{data_info_training}_{settings_info}_estimate.csv'
        refined_cut_wind_speeds: 'cluster_profiles_cut_in_out_{data_info_training}_{settings_info}_refined.csv'
        # refined_cut_wind_speeds: 'cluster_profiles_cut_in_out_max_27_{data_info_training}_{settings_info}_refined.csv'
        optimizer_history: 'optimizer_history_{data_info_training}_{settings_info}.hist'
        # Plotting
        plot_output: '{{title}}_{data_info}__{data_info_training}_{settings_info}.pdf'
        plot_output_data: '{{title}}_{data_info}_{settings_info}.pdf'
        training_plot_output: '{{title}}_{data_info_training}_{settings_info}.pdf'


